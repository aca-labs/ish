{"repository_name":"github.com/aca-labs/ish","body":"# ish\n\n[![GitHub release](https://img.shields.io/github/release/aca-labs/ish.svg)](https://github.com/aca-labs/ish/releases)\n[![Build Status](https://travis-ci.com/aca-labs/ish.svg?branch=master)](https://travis-ci.com/aca-labs/ish)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://aca-labs.github.io/ish/)\n\n![](https://www.charbase.com/images/glyph/8776)\n\nProbabilistic data structures for good-ish computation.\n\n*Note: this library is still WIP*\n\nProvides a set of common data structures that exhibit favourable space / time\ncharacteristics in exchange for precision.\n\n## TODO\n- [x] [Count-min sketch](https://en.wikipedia.org/wiki/Count%E2%80%93min_sketch)\n- [ ] [Bloom filter](https://en.wikipedia.org/wiki/Bloom_filter)\n- [ ] [HyperLogLog](https://en.wikipedia.org/wiki/HyperLogLog)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  ish:\n    github: aca-labs/ish\n```\n\n## Usage\n\nSee https://aca-labs.github.io/ish/\n\n## Contributing\n\n1. Fork it ( https://github.com/aca-labs/ish/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Kim Burgess](https://github.com/kimburgess) - creator, maintainer\n","program":{"html_id":"github.com/aca-labs/ish/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/aca-labs/ish","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/aca-labs/ish/Ish","path":"Ish.html","kind":"module","full_name":"Ish","name":"Ish","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ish/lib/matrix.cr","line_number":1,"url":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr"},{"filename":"ish/version.cr","line_number":1,"url":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/version.cr"}],"repository_name":"github.com/aca-labs/ish","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/aca-labs/ish/Ish/CountMinSketch","path":"Ish/CountMinSketch.html","kind":"class","full_name":"Ish::CountMinSketch","name":"CountMinSketch","abstract":false,"superclass":{"html_id":"github.com/aca-labs/ish/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/aca-labs/ish/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/aca-labs/ish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ish/count_min_sketch.cr","line_number":27,"url":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr"}],"repository_name":"github.com/aca-labs/ish","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/aca-labs/ish/Ish","kind":"module","full_name":"Ish","name":"Ish"},"doc":"A Count-Min sketch is a probabilistic data structure used for summarizing\nstreams of data in sub-linear space.\n\nPerformance is modelled two parameters: *epsilon* (error factor) and *delta*\n(probability of error).\n\nThe sketch will provide estimate counts of the true frequency at a\nprobability of at least `1 - delta`. Due to internal collissions counts\nprovide may exceed the true frequency, but are garunteed to never\nunderestimate the true value.\n\n  `true frequency <= estimate`\n\nError within estimates is proportional to the total aggregate number of\noccurences seen, and to the epsilon. This also means significantly larger\ntruth values can dwarf smaller the error term producing more accurate\nestimates for items with the largest counts.\n\nFurther information and proofs can be found at\nhttp://dimacs.rutgers.edu/~graham/pubs/papers/cmencyc.pdf\n\nOPTIMIZE: support parallel hashing / increment / count operations when\nsupported by Crystal","summary":"<p>A Count-Min sketch is a probabilistic data structure used for summarizing streams of data in sub-linear space.</p>","class_methods":[],"constructors":[{"id":"new(epsilon,delta,seed=nil)-class-method","html_id":"new(epsilon,delta,seed=nil)-class-method","name":"new","doc":"Creates a count-min sketch with the specified characteristics.\n\nWhen choosing a configuration, you are often trying to minimize the error\nterm of the estimate. Acceptable errors in estimation fall within a range\nwhich is a factor of *epsilon*. Smaller values of *epsilon* should produce\nsketch configurations that provide estimates closer to the true values.\nHowever, this will increase the space required by the sketch.\n\nError in estimation is also proportional to the total number of distinct\nitems counted. A factor in the error term is a summation of total number\nof occurences of each distinct item. Another way to reduce the error term\nis by counting fewer things.\n\nAlternatively, you may try to reduce the frequency error and increase the\nchance of success. This is modeled as `1.0 - delta`. Increasing this number\ncan produce sketch configurations with reduced error rates, but that will\nrequire more memory.\n\nA good rule of thumb for finding a starting configuration is to try an\nepsilon with as many significant digits as you have digits in your expected\nvolume (e.g. given an expected volume of 5000 a good starting point for\nepsilon might be `0.0001`).\n\nAn excellent resource that provides visualisation of different\nconfigurations can be found at\nhttp://crahen.github.io/algorithm/stream/count-min-sketch-point-query.html","summary":"<p>Creates a count-min sketch with the specified characteristics.</p>","abstract":false,"args":[{"name":"epsilon","doc":null,"default_value":"","external_name":"epsilon","restriction":""},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""},{"name":"seed","doc":null,"default_value":"nil","external_name":"seed","restriction":""}],"args_string":"(epsilon, delta, seed = <span class=\"n\">nil</span>)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L63","def":{"name":"new","args":[{"name":"epsilon","doc":null,"default_value":"","external_name":"epsilon","restriction":""},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""},{"name":"seed","doc":null,"default_value":"nil","external_name":"seed","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(epsilon, delta, seed)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(item)-instance-method","html_id":"&lt;&lt;(item)-instance-method","name":"<<","doc":"Inserts *item*, incrementing its count by 1.","summary":"<p>Inserts <em>item</em>, incrementing its count by 1.</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""}],"args_string":"(item)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L83","def":{"name":"<<","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"increment(item, 1)"}},{"id":"count(item)-instance-method","html_id":"count(item)-instance-method","name":"count","doc":"Retrieves a frequency estimate for *item*.","summary":"<p>Retrieves a frequency estimate for <em>item</em>.</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""}],"args_string":"(item)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L88","def":{"name":"count","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(hash(item)).map_with_index do |j, i|\n  @sketch[i, j]\nend.min"}},{"id":"depth-instance-method","html_id":"depth-instance-method","name":"depth","doc":"Gets the depth of the sketch.","summary":"<p>Gets the depth of the sketch.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L99","def":{"name":"depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"depth, _ = @sketch.size\ndepth\n"}},{"id":"increment(item,amount:UInt32=1_u32)-instance-method","html_id":"increment(item,amount:UInt32=1_u32)-instance-method","name":"increment","doc":"Increases the count of *item* within the sketch by *amount* (default 1).","summary":"<p>Increases the count of <em>item</em> within the sketch by <em>amount</em> (default 1).</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"amount","doc":null,"default_value":"1_u32","external_name":"amount","restriction":"UInt32"}],"args_string":"(item, amount : UInt32 = <span class=\"n\">1_u32</span>)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L77","def":{"name":"increment","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"amount","doc":null,"default_value":"1_u32","external_name":"amount","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(hash(item)).each_with_index do |j, i|\n  __temp_23 = i\n  __temp_24 = j\n  @sketch[__temp_23, __temp_24] = @sketch[__temp_23, __temp_24] + amount\nend\nself\n"}},{"id":"width-instance-method","html_id":"width-instance-method","name":"width","doc":"Gets the width of the sketch.","summary":"<p>Gets the width of the sketch.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L93","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_, width = @sketch.size\nwidth\n"}}],"macros":[],"types":[{"html_id":"github.com/aca-labs/ish/Ish/CountMinSketch/Hasher","path":"Ish/CountMinSketch/Hasher.html","kind":"module","full_name":"Ish::CountMinSketch::Hasher","name":"Hasher","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ish/count_min_sketch.cr","line_number":111,"url":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr"}],"repository_name":"github.com/aca-labs/ish","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"P","name":"P","value":"(1 << 31) - 1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/aca-labs/ish/Ish/CountMinSketch/Hasher","kind":"module","full_name":"Ish::CountMinSketch::Hasher","name":"Hasher"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/aca-labs/ish/Ish/CountMinSketch","kind":"class","full_name":"Ish::CountMinSketch","name":"CountMinSketch"},"doc":"Universal hash functions.\nOPTIMIZE: replace with a faster hash method","summary":"<p>Universal hash functions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"fast_hash(item,seed,width)-instance-method","html_id":"fast_hash(item,seed,width)-instance-method","name":"fast_hash","doc":"TODO test / bench this","summary":"<p><span class=\"flag orange\">TODO</span>  test / bench this</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"args_string":"(item, seed, width)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L125","def":{"name":"fast_hash","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash = seed * item.hash\nhash = hash + (hash >> 32)\nhash = hash & P\nhash.to_u32 % width\n"}},{"id":"hash(a,b,x,m)-instance-method","html_id":"hash(a,b,x,m)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"args_string":"(a, b, x, m)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L120","def":{"name":"hash","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((a * x) + b) % P) % m"}},{"id":"hash(item,seed,width)-instance-method","html_id":"hash(item,seed,width)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"args_string":"(item, seed, width)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/count_min_sketch.cr#L116","def":{"name":"hash","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":""},{"name":"seed","doc":null,"default_value":"","external_name":"seed","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hash(*seed, item.hash, width)"}}],"macros":[],"types":[]}]},{"html_id":"github.com/aca-labs/ish/Ish/Matrix","path":"Ish/Matrix.html","kind":"class","full_name":"Ish::Matrix(T)","name":"Matrix","abstract":false,"superclass":{"html_id":"github.com/aca-labs/ish/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/aca-labs/ish/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/aca-labs/ish/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ish/lib/matrix.cr","line_number":2,"url":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr"}],"repository_name":"github.com/aca-labs/ish","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/aca-labs/ish/Ish","kind":"module","full_name":"Ish","name":"Ish"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(m:Int,n:Int,value:T)-class-method","html_id":"new(m:Int,n:Int,value:T)-class-method","name":"new","doc":"Creates a *m* x *n* matrix with each element initialized as *value*.","summary":"<p>Creates a <em>m</em> x <em>n</em> matrix with each element initialized as <em>value</em>.</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(m : Int, n : Int, value : T)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L8","def":{"name":"new","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Matrix(T).new(m, n) do\n  value\nend"}},{"id":"new(m:Int,n:Int,&block)-class-method","html_id":"new(m:Int,n:Int,&amp;block)-class-method","name":"new","doc":"Creates an *m* x *n* matrix, yielding indicies for each element to\nprovide an initial value.","summary":"<p>Creates an <em>m</em> x <em>n</em> matrix, yielding indicies for each element to provide an initial value.</p>","abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(m : Int, n : Int, &block)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L14","def":{"name":"new","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Matrix(T).allocate\n_.initialize(m, n) do |_arg0, _arg1|\n  yield _arg0, _arg1\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](i:Int,j:Int):T-instance-method","html_id":"[](i:Int,j:Int):T-instance-method","name":"[]","doc":"Retrieves the value of the element at *i*,*j*.\n\nIndicies are zero-based. Negative values may be passed for *i* and *j* to\nenable reverse indexing such that `self[-1, -1] == self[m - 1, n - 1]`\n(same behaviour as arrays).","summary":"<p>Retrieves the value of the element at <em>i</em>,<em>j</em>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":"Int"}],"args_string":"(i : Int, j : Int) : T","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L34","def":{"name":"[]","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"idx = index(i, j)\n@buffer[idx]\n"}},{"id":"[]=(i:Int,j:Int,value:T)-instance-method","html_id":"[]=(i:Int,j:Int,value:T)-instance-method","name":"[]=","doc":"Sets the value of the element at *i*,*j*.","summary":"<p>Sets the value of the element at <em>i</em>,<em>j</em>.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(i : Int, j : Int, value : T)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L40","def":{"name":"[]=","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":"Int"},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":"Int"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"idx = index(i, j)\n@buffer[idx] = value\n"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the dimensions of `self` as a tuple of `{m, n}`.","summary":"<p>Returns the dimensions of <code>self</code> as a tuple of <code>{m, n}</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L46","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@m, @n}"}},{"id":"update(i,j,&block:T->T)-instance-method","html_id":"update(i,j,&amp;block:T-&gt;T)-instance-method","name":"update","doc":"Yields the current element at *i*,*j* and updates the value with the\nblock's return value.","summary":"<p>Yields the current element at <em>i</em>,<em>j</em> and updates the value with the block's return value.</p>","abstract":false,"args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""}],"args_string":"(i, j, &block : T -> T)","source_link":"https://github.com/aca-labs/ish/blob/5cce368d952e7e160e4b5ee1e7867f524dbb0d4c/src/ish/lib/matrix.cr#L52","def":{"name":"update","args":[{"name":"i","doc":null,"default_value":"","external_name":"i","restriction":""},{"name":"j","doc":null,"default_value":"","external_name":"j","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> T)"},"return_type":"","visibility":"Public","body":"idx = index(i, j)\n@buffer[idx] = yield @buffer[idx]\n"}}],"macros":[],"types":[]}]}]}}